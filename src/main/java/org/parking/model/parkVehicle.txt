


// ------------------------COPIES OF PREVIOUS ITERATIONS OF PARKVEHICLE, KEEPING THESE JUST INCASE-----------------------------------------------

//        System.out.println(getMotorcycleParking());
//        System.out.println(getMotorcycleParking().stream().filter(spot -> spot.isEmpty()).findFirst().get().isEmpty());
//        System.out.println(firstAvailableMotorcycleParking.isPermittedVehicles(vehicle.getType()));
//        if (firstAvailableMotorcycleParking.isPermittedVehicles(vehicle.getType())) {
//            firstAvailableMotorcycleParking.addVehicle(vehicle);
//            firstAvailableMotorcycleParking.setEmpty(false);
//        }
//        else if(firstAvailableLargeParking.isEmpty() && vehicle.getType().equals(Vehicle.vehicleType.VAN)) {
//            firstAvailableLargeParking.addVehicle(vehicle);
//            System.out.println("First Large vehicle if block invoking");
//        }
//        else if (firstAvailableCarParking.isPermittedVehicles(vehicle.getType())) {
//            firstAvailableCarParking.addVehicle(vehicle);
//            System.out.println("Car if block invoking");
//        } else if (firstAvailableLargeParking.isPermittedVehicles(vehicle.getType())) {
//            firstAvailableLargeParking.addVehicle(vehicle);
//            System.out.println("Large vehicle if block invoking");
//        }

//        System.out.println("firstAvailableMotorcycleParking: " + firstAvailableMotorcycleParking.isPermittedVehicles(vehicle.getType()));
//        System.out.println("firstAvailableCarParking: " + firstAvailableCarParking.isPermittedVehicles(vehicle.getType()));
//        System.out.println("firstAvailableLargeParking: " + firstAvailableLargeParking.isPermittedVehicles(vehicle.getType()));

//        System.out.println(getMotorcycleParking());
//        System.out.println(getCarParking());
//        System.out.println(getLargeParking());


//        if (firstAvailableMotorcycleParking >= 0 && isMotorcycle) {
//            getMotorcycleParking().set(firstAvailableMotorcycleParking, vehicle);
//        } else if (firstAvailableCarParking >= 0 && (isMotorcycle || isCar)) {
//            getCarParking().set(firstAvailableCarParking, vehicle);
//        } else if (firstAvailableLargeParking >= 0 && (isMotorcycle || isCar || isVan)) {
//            if (isVan && (firstAvailableLargeParking + 3) < getLargeParking().size()) {
//                for (int i = 0; i < 3; i++) {
//                    int firstAvailableLargeParkingInner = getLargeParking().indexOf(null);
//                    getLargeParking().set(firstAvailableLargeParkingInner, vehicle);
//                }
//            } else if (isMotorcycle || isCar) {
//                getLargeParking().set(firstAvailableLargeParking, vehicle);
//            } else {
//                System.out.println("Your van is too big, there is no more space. Get out of here!");
//            }
//        } else if (isMotorcycle || isCar || isVan) {
//            System.out.println("We dont currently have space for your vehicle");
//        } else {
//            System.out.println("Unfortunately our lovely parking does not support that strange vehicle: " + vehicle.getType() +  ", go somewhere else.");
//        }