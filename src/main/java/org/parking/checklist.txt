// Create a class ParkingLot FINISHED
// Create a class ParkingSpot FINISHED
// Add motorcycle, car, large enums as spotType to parkingSpot FINISHED
// Add motorcycleParking, carParking and largeParking to ParkingLot FINISHED
// Create each field as a list to contain ParkingSpot to dictate if parking is taken FINISHED
// Create an abstract class of vehicle with relevant fields - licensePlate and vehicleType FINISHED
// Create all vehicle classes extending the vehicle class FINISHED
// Create a vehicle factory which will generate vehicles which we will later use to populate the parking FINISHED
//
// Create a method which tells us how many spots are remaining FINISHED
// Create a method which tells us how many total spots are in the parking lot FINISHED
// Create a method which tells us when the parking lot is full FINISHED
// Create a method which tells us when the parking lot is empty FINISHED
// Create a method which tells us when certain spots are full e.g. when all motorcycle spots are taken FINISHED
// Create a method which tells us how many spots vans are taking up FINISHED
//
//
//
//
//------------------------------------------------------------------------
// The parking lot can hold motorcycles, cars and vans
// The parking lot has motorcycle spots, car spots and large spots
// A motorcycle can park in any spot
// A car can park in a single compact spot, or a regular spot
// A van can park, but it will take up 3 regular spots
// These are just a few assumptions. Feel free to ask your interviewer about more assumptions as needed
